{"title":"Lenny的博客","description":"不得了","language":"zh-CN","link":"https://lennyup.github.io","pubDate":"Fri, 22 Sep 2017 03:21:17 GMT","lastBuildDate":"Wed, 11 Oct 2017 05:54:01 GMT","generator":"hexo-generator-json-feed","webMaster":"Lenny","items":[{"title":"android需要的Java基础（复习篇）","link":"https://lennyup.github.io/2017/09/22/android-java/","description":"前言这段时间，项目基本完成，进入测试上线阶段，终于可以闲下来查漏补缺了，这里我将复习下android所需要的java基础，也可以帮大家回忆一下，今年的Google IO 大会上，Google宣布Kotlin成为Android的官方语言，有兴趣的可以去学习下，Java作为android的第一个语言，还是需要把打这部分知识打牢固的。(这部分内容只是当作自己的复习)","pubDate":"Fri, 22 Sep 2017 03:21:17 GMT","guid":"https://lennyup.github.io/2017/09/22/android-java/","category":"Java"},{"title":"android面试题以及一些贮备知识","link":"https://lennyup.github.io/2017/09/20/android-interview/","description":"前言这段时间，掘金出了个掘金秋招求职征文大赛，好想参加，但是自己貌似已经一年多没有参加过面试了（似的，我变懒了，这是不对的 ps： 捂脸哭），看见好多大佬的文章，感觉自己没有学过Android了，是时候把自己以前遗落的再次捡起来了，这里只是提供一些面试题和一些基础的知识，可能会不全，甚至会有错误（清喷），我会不定时更新的。","pubDate":"Wed, 20 Sep 2017 03:20:42 GMT","guid":"https://lennyup.github.io/2017/09/20/android-interview/","category":"Android"},{"title":"React Native 集成原生组件（Android）","link":"https://lennyup.github.io/2017/09/15/rn-native/","description":"一、前言 最近一直在做公司项目的 4.0 版本重构，在重构中有一个需求，要求对FlatList的下拉刷新做统一的修改，就是要达到Android和IOS的效果一致(emmmm), React Native官方给的样式是两端不一样的效果，在Android端，是用的Swiperefresh。在网上搜到的一些都是很久没有更新的git项目或者就是达不到我们高大上的 UI的要求，于是乎，我走上了封装原生组件的道路。下面我说下我进行封装的几个步骤。","pubDate":"Fri, 15 Sep 2017 03:42:04 GMT","guid":"https://lennyup.github.io/2017/09/15/rn-native/","category":"React Native"},{"title":"Android 7.0 行为变更之FileProvider","link":"https://lennyup.github.io/2017/06/09/file-provider/","description":"一、简述之前在做拍照功能的时候，在7.0系统的手机上会出现问题，在看了看官网的Android 7.0行为变更,才知道问题出在了哪里，适配的话必须去除项目中传递file://类似格式的uri了。","pubDate":"Fri, 09 Jun 2017 05:48:45 GMT","guid":"https://lennyup.github.io/2017/06/09/file-provider/","category":"Android"},{"title":"消息传递机制之EventBus","link":"https://lennyup.github.io/2017/05/05/eventbus-first/","description":"每天进步一点，没准哪天自己也会成为大佬呢。 现在，我开始研究最近特别火的消息传递机制EventBus.以前，对于activity和fragment之间的通信可以用接口回调的方式实现，使用起来会略有些麻烦。现在可以用EventBus，好用简单。 官方说明是这样定义的：EventBus是针对Android的发布／订阅事件总线。轻松实现各个组件之间的传递消息，可读性高，耦合度低。下面以3.0为例，学习和记录下其使用。","pubDate":"Fri, 05 May 2017 09:17:52 GMT","guid":"https://lennyup.github.io/2017/05/05/eventbus-first/","category":"Android"},{"title":"几种开源协议的简要分析","link":"https://lennyup.github.io/2017/04/21/choose-license/","description":"前言最近闲来无事，在github上看到许多大佬项目中所用到的开源协议，一直对开源协议的使用比较模糊，在这里，对其做下简要说明。 开源协议这里只介绍几个主要的开源协议–GPL、BSD、MIT、Mozilla、Apache、LGPl。","pubDate":"Fri, 21 Apr 2017 06:12:46 GMT","guid":"https://lennyup.github.io/2017/04/21/choose-license/","category":"github"},{"title":"浅析builder模式","link":"https://lennyup.github.io/2017/04/20/android-builder/","description":"前言其实，我很早就想总结一下自己多熟悉的设计模式，一直找不到合适的切入点来写。最近看到 AlertDialog,心想这不就是一个活生生的Builder模式的例子吗，于是乎，我赶紧敲了敲自己昏昏欲睡的脑袋，抓住自己呼之欲出的灵感，奋笔疾书！","pubDate":"Thu, 20 Apr 2017 02:56:26 GMT","guid":"https://lennyup.github.io/2017/04/20/android-builder/","category":"Android"},{"title":"Materal Design 之 CardView","link":"https://lennyup.github.io/2017/04/14/cardview-first/","description":"最近看一些大佬的自定义view，其中用到了CardView，感觉好高大上，赶紧去恶补一下。（我默默的打开了源码） 源码解读首先在刚开始有这么一句话A FrameLayout with a rounded corner background and shadow. CardView是一个带圆角、带阴影效果的FrameLayout（原来如此）","pubDate":"Fri, 14 Apr 2017 03:41:55 GMT","guid":"https://lennyup.github.io/2017/04/14/cardview-first/","category":"Android"},{"title":"算法——初篇","link":"https://lennyup.github.io/2017/03/20/algorithm/","description":"作为一个经常在算法课上逃课的孩子，写这个有些尴尬，因为算法真的是太枯燥了，但是作为一个程序员，算法还是一定要会的（ps：许多大公司面试的时候特爱考）。在这里，简单说下几个基本的算法。 在这之前，说下时间复杂度的概念。","pubDate":"Mon, 20 Mar 2017 02:13:11 GMT","guid":"https://lennyup.github.io/2017/03/20/algorithm/","category":"Java"},{"title":"初识rxjava（二）","link":"https://lennyup.github.io/2017/03/16/rxjava-retrofit/","description":"上一篇，简单的认识了最近火爆异常的RxJava,如果你对RxJava还是很陌生，你可以去网上找一下相关知识，当然也可以看我的上一篇文章初识RxJava。这里我通过RxJava的使用场景之一——与Retrofit相结合，来具体看下RxJava的使用。 基本RxJava和Retrofit结合使用的最基本的格式：","pubDate":"Thu, 16 Mar 2017 09:29:49 GMT","guid":"https://lennyup.github.io/2017/03/16/rxjava-retrofit/","category":"Android"},{"title":"初识RxJava","link":"https://lennyup.github.io/2017/03/14/rxjava-first/","description":"自打进入公司以来，一直用的是React Native，以及 React + WebView的结构来写代码，对原生的一些知识学习落后了许多。老是听朋友说什么 RxJava，一脸懵逼。现在，趁闲暇之时，补充下Android知识，在这里简单说下对RxJava的理解。 在开始之前呢，先要说下其github以及要依赖的包，由于现在 RxJava2已经有了一段时间了，但是对于小白的我来说，还是先从1开始吧。 GitHub: https://github.com/ReactiveX/RxJavahttps://github.com/ReactiveX/RxAndroid","pubDate":"Tue, 14 Mar 2017 07:23:15 GMT","guid":"https://lennyup.github.io/2017/03/14/rxjava-first/","category":"Android"},{"title":"HEXO+Github,搭建自己的个人博客","link":"https://lennyup.github.io/2017/03/11/hexo-github/","description":"我将这篇文章，作为我的第一篇文章，是为了记录下来自己搭建这个博客的点滴（ps: 方便回忆）。前几天，看见同事在弄这个，于是乎，自己也搭一个玩玩。经过各种查找资料，各种踩坑之后，终于搭建好了hexo，我的hexo是3.2.0版本的。 之前有想过写博客，一方面是做笔记，俗话说好脑子不如烂笔头嘛，另一方面就是提高自己的总结能力以及表述能力。现在看好多人都用hexo来弄，还有的用的是Jekyll搭的，有需要的可以去搜搜。好了，下面开始上搭建的步骤。","pubDate":"Sat, 11 Mar 2017 09:19:24 GMT","guid":"https://lennyup.github.io/2017/03/11/hexo-github/","category":"hexo"}]}